<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StockMapper">
	
	<!--表名 -->
	<sql id="tableName">
		SYS_STOCK
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		PERIOD,	
		CODE,	
		NAME,	
		INDUSTRY,	
		VALUATION_DATE,	
		RECENT_TRX_DATE,	
		UNIT_PRICE,	
		SUSPENSION,	
		SUSPENSION_DATE,	
		CLOSING_PRICE,	
		SUSPENSION_INFO,	
		RESUMPTION_DATE,	
		RESUMPTION_PRICE,	
		NEW_FLAG,	
		AFLOAT_DATE,	
		ACTIVE,	
		STATUS,	
		STOCK_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{PERIOD},	
		#{CODE},	
		#{NAME},	
		#{INDUSTRY},	
		#{VALUATION_DATE},	
		#{RECENT_TRX_DATE},	
		#{UNIT_PRICE},	
		#{SUSPENSION},	
		#{SUSPENSION_DATE},	
		#{CLOSING_PRICE},	
		#{SUSPENSION_INFO},	
		#{RESUMPTION_DATE},	
		#{RESUMPTION_PRICE},	
		#{NEW_FLAG},	
		#{AFLOAT_DATE},	
		#{ACTIVE},	
		#{STATUS},	
		#{STOCK_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 批量新增-->
	<insert id="saveBatch" parameterType="java.util.List">
		insert into 
	        <include refid="tableName"></include>
		(
			<include refid="Field"></include>,
			INDUSTRY_NAME_CSRC,
			INDUSTRY_CODE_CSRC,
			INDUSTRY_NAME_HS,
			INDUSTRY_CODE_HS,
			INDUSTRY_NAME_GICS,
			INDUSTRY_CODE_GICS
		) values 
		<foreach collection ="list" item="pd" index= "index" separator =",">
         (
		     #{pd.PERIOD},	
		     #{pd.CODE},	
		     #{pd.NAME},	
	 	     #{pd.INDUSTRY},	
		     #{pd.VALUATION_DATE},	
		     #{pd.RECENT_TRX_DATE},	
		     #{pd.UNIT_PRICE},	
		     #{pd.SUSPENSION},	
		     #{pd.SUSPENSION_DATE},	
		     #{pd.CLOSING_PRICE},	
		     #{pd.SUSPENSION_INFO},	
		     #{pd.RESUMPTION_DATE},	
		     #{pd.RESUMPTION_PRICE},
		     #{pd.NEW_FLAG},
		     #{pd.AFLOAT_DATE},	
		     #{pd.ACTIVE},
		     #{pd.STATUS},
		     #{pd.STOCK_ID},
			 #{pd.INDUSTRY_NAME_CSRC},
			 #{pd.INDUSTRY_CODE_CSRC},
			 #{pd.INDUSTRY_NAME_HS},
			 #{pd.INDUSTRY_CODE_HS},
			 #{pd.INDUSTRY_NAME_GICS},
			 #{pd.INDUSTRY_CODE_GICS}
         )
         </foreach >
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STOCK_ID = #{STOCK_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			PERIOD = #{PERIOD},
			CODE = #{CODE},
			NAME = #{NAME},
			INDUSTRY = #{INDUSTRY},
			VALUATION_DATE = #{VALUATION_DATE},
			RECENT_TRX_DATE = #{RECENT_TRX_DATE},
			<if test="UNIT_PRICE != null and UNIT_PRICE != ''">
			UNIT_PRICE = #{UNIT_PRICE},
			</if>
			SUSPENSION = #{SUSPENSION},
			<if test="SUSPENSION_DATE != null and SUSPENSION_DATE != ''">
			SUSPENSION_DATE = #{SUSPENSION_DATE},
			</if>
			<if test="CLOSING_PRICE != null and CLOSING_PRICE != ''">
			CLOSING_PRICE = #{CLOSING_PRICE},
			</if>
			SUSPENSION_INFO = #{SUSPENSION_INFO},
			<if test="RESUMPTION_DATE != null and RESUMPTION_DATE != ''">
			RESUMPTION_DATE = #{RESUMPTION_DATE},
			</if>
			<if test="RESUMPTION_PRICE != null and RESUMPTION_PRICE != ''">
			RESUMPTION_PRICE = #{RESUMPTION_PRICE},
			</if>
			NEW_FLAG = #{NEW_FLAG},
			<if test="AFLOAT_DATE != null and AFLOAT_DATE != ''">
			AFLOAT_DATE = #{AFLOAT_DATE},
			</if>
			ACTIVE = #{ACTIVE},
			STATUS = #{STATUS}
		where 
		STOCK_ID = #{STOCK_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			STOCK_ID = #{STOCK_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!-- 根据需求自己加检索条件 -->
					CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.PERIOD != null and pd.PERIOD != ''">
		    and PERIOD =  #{pd.PERIOD}
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STOCK_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 导入后批量处理 -->
    <update id="updateBatch" parameterType="pd">
	    update <include refid="tableName"></include>
           set PERIOD = REPLACE(PERIOD,'.0','')
         where PERIOD LIKE '%.0'
	</update>
	
</mapper>