<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StockLimitMapper">
	
	<!--表名 -->
	<sql id="tableName">
		EY_STOCK_LIMIT
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		FIRM_CODE,
		FUND_ID,
		PERIOD,
		ACCOUNT_NUM,
		STOCK_CODE,
		STOCK_NAME,
		MARKET,
		SUB_TYPE,
		TRX_STATUS,
		QUANTITY,
		SUBSCRIBE_PRICE,
		VAL_PRICE,
		RESTRICT_TYPE,
		TOTAL_COST,
		MKT_VALUE,
		SUBSCRIBE_DATE,
		LIFTING_DATE,
		SUSPENSION_DATE,
		SUSPENSION_INFO,
		RESUMPTION_DATE,
		RESMPATION_OPEN_PRICE,
		DESCRIPTION,
		CREATOR,
		REVIEWER,
		ACTIVE,	
		STATUS,
		IMPORT_FILE_ID,
		STOCKLIMIT_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{FIRM_CODE},
		#{FUND_ID},
		#{PERIOD},
		#{ACCOUNT_NUM},
		#{STOCK_CODE},
		#{STOCK_NAME},
		#{MARKET},
		#{SUB_TYPE},
		#{TRX_STATUS},
		#{QUANTITY},
		#{SUBSCRIBE_PRICE},
		#{VAL_PRICE},
		#{RESTRICT_TYPE},
		#{TOTAL_COST},
		#{MKT_VALUE},
		#{SUBSCRIBE_DATE},
		#{LIFTING_DATE},
		#{SUSPENSION_DATE},
		#{SUSPENSION_INFO},
		#{RESUMPTION_DATE},
		#{RESMPATION_OPEN_PRICE},
		#{DESCRIPTION},
		#{CREATOR},
		#{REVIEWER},
		#{ACTIVE},
		#{STATUS},
		#{IMPORT_FILE_ID},
		#{STOCKLIMIT_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STOCKLIMIT_ID = #{STOCKLIMIT_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			FIRM_CODE = #{FIRM_CODE},
			FUND_ID = #{FUND_ID},
			PERIOD = #{PERIOD},
			ACCOUNT_NUM = #{ACCOUNT_NUM},
			STOCK_CODE = #{STOCK_CODE},
			STOCK_NAME = #{STOCK_NAME},
			MARKET = #{MARKET},
			SUB_TYPE = #{SUB_TYPE},
			TRX_STATUS = #{TRX_STATUS},
			QUANTITY = #{QUANTITY},
			SUBSCRIBE_PRICE = #{SUBSCRIBE_PRICE},
			VAL_PRICE = #{VAL_PRICE},
			RESTRICT_TYPE = #{RESTRICT_TYPE},
			TOTAL_COST = #{TOTAL_COST},
			MKT_VALUE = #{MKT_VALUE},
			SUBSCRIBE_DATE = #{SUBSCRIBE_DATE},
			LIFTING_DATE = #{LIFTING_DATE},
			SUSPENSION_DATE = #{SUSPENSION_DATE},
			SUSPENSION_INFO = #{SUSPENSION_INFO},
			RESUMPTION_DATE = #{RESUMPTION_DATE},
			RESMPATION_OPEN_PRICE = #{RESMPATION_OPEN_PRICE},
			DESCRIPTION = #{DESCRIPTION},
			CREATOR = #{CREATOR},
			REVIEWER = #{REVIEWER},
			ACTIVE = #{ACTIVE},
			STATUS = #{STATUS},
			IMPORT_FILE_ID = #{IMPORT_FILE_ID}
		where 
		STOCKLIMIT_ID = #{STOCKLIMIT_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			STOCKLIMIT_ID = #{STOCKLIMIT_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!-- 根据需求自己加检索条件 -->
					FIRM_CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				     or 
					FUND_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or 
					STOCK_CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STOCKLIMIT_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 批量新增-->
	<insert id="saveBatch" parameterType="java.util.List">
		insert into 
	        <include refid="tableName"></include>
		(
	        <include refid="Field"></include>
		) values 
		<foreach collection ="list" item="pd" index= "index" separator =",">
         (
		#{pd.FIRM_CODE},
		#{pd.FUND_ID},
		#{pd.PERIOD},
		#{pd.ACCOUNT_NUM},
		#{pd.STOCK_CODE},
		#{pd.STOCK_NAME},
		#{pd.MARKET},
		#{pd.SUB_TYPE},
		#{pd.TRX_STATUS},
		#{pd.QUANTITY},
		#{pd.SUBSCRIBE_PRICE},
		#{pd.VAL_PRICE},
		#{pd.RESTRICT_TYPE},
		#{pd.TOTAL_COST},
		#{pd.MKT_VALUE},
		#{pd.SUBSCRIBE_DATE},
		#{pd.LIFTING_DATE},
		#{pd.SUSPENSION_DATE},
		#{pd.SUSPENSION_INFO},
		#{pd.RESUMPTION_DATE},
		#{pd.RESMPATION_OPEN_PRICE},
		#{pd.DESCRIPTION},
		#{pd.CREATOR},
		#{pd.REVIEWER},
		#{pd.ACTIVE},
		#{pd.STATUS},
		#{pd.IMPORT_FILE_ID},
		#{pd.STOCKLIMIT_ID}
         )
         </foreach >
	</insert>
	
</mapper>